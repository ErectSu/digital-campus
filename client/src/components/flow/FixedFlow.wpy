<template>
  <view class="fixed-flow">
    <flowGroup wx:if="{{fixedFlows.length !== 0}}" title="固定流程" :radioItems.sync="fixedFlows"
               :value.sync="fixedFlowId"></flowGroup>
    <view class="page__bd" wx:if="{{fixedFlow || pageType == 'detail'}}">
      <view class="weui-cells">
        <view class="weui-cell">
          <view class="weui-cell__bd">
            <!--处理人-->
            <view class="weui-uploader"
                  wx:if="{{currentNode.nodePersonType !== '1' || pageType == 'detail'}}">
              <view class="weui-uploader__hd">
                <view class="weui-uploader__title" wx:if="{{pageType !== 'detail'}}">处理人</view>
                <view class="weui-uploader__title" wx:else>当前节点：{{currentNode.nodeName}}</view>
                <!--<view class="weui-uploader__info">{{files.length}}/2</view>-->
              </view>
              <view class="weui-uploader__bd">
                <view class="weui-uploader__files" id="uploaderFiles">
                  <block wx:for="{{currentNode.nodePersons}}" wx:key="*this">
                    <view class="weui-uploader__file" id="{{item}}">
                      <image class="weui-uploader__img" src="{{item.avatar}}" mode="aspectFill"/>
                      <view class="user-name">{{item.userName}}</view>
                    </view>
                  </block>
                </view>
                <!--选人按钮-->
                <view class="weui-uploader__input-box" wx:if="{{showAddUser}}">
                  <view class="weui-uploader__input" @tap="chooseUser"></view>
                </view>
              </view>
            </view>
            <!--相关人-->
            <view class="weui-uploader cc-man" wx:if="{{ccPerson.length !== 0}}">
              <view class="weui-uploader__hd">
                <view class="weui-uploader__title">相关人</view>
                <!--<view class="weui-uploader__info">{{files.length}}/2</view>-->
              </view>
              <view class="weui-uploader__bd">
                <view class="weui-uploader__files" id="uploaderFiles">
                  <block wx:for="{{ccPerson}}" wx:key="*this">
                    <view class="weui-uploader__file" id="{{item._id}}">
                      <image class="weui-uploader__img" src="{{item.avatar}}" mode="aspectFill"/>
                      <view class="user-name">{{item.userName}}</view>
                    </view>
                  </block>
                </view>
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
    <selectUser :selectedUser.sync="nodePersons" :isShow.sync="showDialog"></selectUser>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import ZRadio from '../../components/base/ZRadio';
  import SelectUser from '../../components/base/SelectUser';

  export default class FixedFlow extends wepy.component {
    props = {
      ccPerson: Array,
    };

    data = {
      nodePersons: [],
      showDialog: false,
      showAddUser: true,
      fixedFlows: [],
      fixedFlowId: '',
      currentNode: {},
      pendingNode: [],
      pageType: '', // 页面类型 新建 详情
      flowType: 1, // 流程类型
      flow: {}, // 流程信息
      detailFlow: {}, // 详情页面时候的流程
    };

    components = {
      flowGroup: ZRadio,
      selectUser: SelectUser,
    };

    methods = {
      chooseUser() {
        this.showDialog = true;
      },
      // 从父组件中获取数据
      getProp(prop) {
        this.flow = prop.flow;
        this.flowType = prop.flowType;
        this.pageType = prop.pageType;
        if (prop.pageType !== 'detail') {
          this.fixedFlows = prop.flow.fixedFlow;
        } else {
          // 详情页面流程
          this.nodePersons = prop.currentNode.nodePersons;
          this.detailFlow = prop.flow.fixedFlow;
        }
        this.currentNode = prop.currentNode;
      },
      exportFlow() {
        let fixedFlow = this.pageType === 'detail' ? this.detailFlow : this.fixedFlow;
        let flowData = {
          flow: fixedFlow,
          currentNode: this.currentNode,
        };
        return flowData;
      },
    };

    events = {};

    watch = {
      nodePersons(persons) {
        this.currentNode.nodePersons = persons;
      },
      pendingNode(nodes) {
        this.$emit('getPendingNode', nodes);
      }
    };

    computed = {
      fixedFlow() {
        let fixedFlow = this.fixedFlows.find((value) => {
          return value._id === this.fixedFlowId;
        });
        if (fixedFlow) {
          this.currentNode = fixedFlow.flow.data;
          this.pendingNode = fixedFlow.pendingNode;
          return fixedFlow.flow;
        }
      },
      showAddUser() {
        return this.currentNode.nodePersonType === '2';
      },
      showFixedFlowGroup() {
        return this.pageType !== 'detail' && this.flowType === 1;
      }
    };

    onLoad(e) {
//      debugger
//      let r = this.$wxpage.route;
    };

    onShow() {
    };
  }
</script>

<style lang='less'>
  @import "flow";
</style>
