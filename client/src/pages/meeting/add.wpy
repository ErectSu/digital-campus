<template>
  <view>
    <view class="weui-cells weui-cells_after-title">
      <meetingTitle :value.sync="title" placeholder="请输入会议标题"></meetingTitle>
      <meetingContent :value.sync="desc" placeholder="请输入会议内容"></meetingContent>
      <imgUploader :files="enclosure"></imgUploader>
    </view>
    <view class="weui-cells__title"></view>
    <view class="weui-cells weui-cells_after-title">
      <startDate title="日期" :value="startDate"></startDate>
      <startTime title="开始时间" :value="startTime"></startTime>
      <!--</view>-->
      <!--<view class="weui-cells__title"></view>-->
      <!--<view class="weui-cells weui-cells_after-title">-->
      <!--<endDate title="结束日期" :value="endDate"></endDate>-->
      <endTime title="结束时间" :value="endTime"></endTime>
      <meetingPlace title="会议地点" :value.sync="meetingRoom"></meetingPlace>
    </view>
    <view class="weui-cells__title"></view>
    <view class="weui-cells weui-cells_after-title">
      <view @tap="showCreatorB">
        <creator title="发起人" inAccess="true" type="2"
                 :value.sync="originatorLen">
        </creator>
      </view>
      <view @tap="participantB">
        <meetingPerson title="参会人" inAccess="true" type="2"
                       :value.sync="meetingPersonLen">
        </meetingPerson>
      </view>
    </view>
    <view class="weui-btn-area">
      <button class="weui-btn" type="primary" @tap="confirmMeeting">立即提交</button>
      <button class="weui-btn" type="default" @tap="saveDraft">存为草稿</button>
    </view>
    <creatorBoard title="发起人" comId="1"
                  :persons.sync="originator" :isShow.sync="showOgt">

    </creatorBoard>
    <participantBoard title="参会者" comId="2"
                      :isShow.sync="showPP" :persons.sync="participant">

    </participantBoard>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import ZInput from '../../components/base/ZInput';
  import ZTextarea from '../../components/base/ZTextarea';
  import ZUploader from '../../components/base/ZUploader';
  import DatePicker from '../../components/base/DatePicker';
  import TimePicker from '../../components/base/TimePicker';
  import ZCell from '../../components/base/ZCell';
  import UserBoard from '../../components/base/UserBoard';


  export default class MeetingAdd extends wepy.page {
    config = {
      navigationBarTitleText: '发起会议',
    };

    data = {
      title: '',
      desc: '',
      enclosure: [],
      startDate: '',
      startTime: '',
//      endDate: '',
      endTime: '',
      meetingRoom: '',
      originator: [],
      participant: [],
      showOgt: false,
      showPP: false,
    };

    components = {
      meetingTitle: ZInput,
      meetingContent: ZTextarea,
      imgUploader: ZUploader,
      startDate: DatePicker,
      endDate: DatePicker,
      startTime: TimePicker,
      endTime: TimePicker,
      meetingPlace: ZInput,
      creator: ZCell,
      meetingPerson: ZCell,
      creatorBoard: UserBoard,
      participantBoard: UserBoard,
    };

    methods = {
      showCreatorB() {
        this.showOgt = true;
        this.$invoke('creatorBoard', 'getBoardPerson', this.originator);
      },
      participantB() {
        this.showPP = true;
        this.$invoke('participantBoard', 'getBoardPerson', this.participant);
      },
      async confirmMeeting() {
        let meeting = this.saveMeeting();
        meeting.status = 1;
        let res = await wepy.request({
          url: '/api/meeting/addMeeting',
          method: 'POST',
          data: {meeting}
        });
        wx.navigateBack({
          delta: 1
        });
      },

      saveDraft() {

      }
    };

    events = {
      getBoardData(data) {
        let id = data.id;
        if (id === '1') {
          this.originator = data.persons;
        } else {
          this.participant = data.persons;
        }
//        this.$apply();
      }
    };

    watch = {};

    computed = {
      originatorLen() {
        return `已选择${this.originator.length}人`;
      },
      meetingPersonLen() {
        return `已选择${this.participant.length}人`;
      },

    };

    onLoad() {
    };

    onShow() {
    };

    saveMeeting() {
      let startTime = `${this.startDate} ${this.startTime}`;
      let endTime = `${this.startDate} ${this.endTime}`;
      let originator = this.originator.map(item => item._id);
      let participant = this.participant.map(item => item._id);
      let meeting = {
        title: this.title,
        desc: this.desc,
        meetingRoom: this.meetingRoom,
        startTime: startTime,
        endTime: endTime,
        enclosure: this.enclosure,
        originator: originator,
        participant: participant,
//        leaver:[],
//        attender:[],
      };
      return meeting;
    }

  }
</script>

<style lang='less'>
</style>
